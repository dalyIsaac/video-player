{"version":3,"sources":["components/Video/handleVideoShortcuts.ts","components/PlaybackRate/PlaybackRate.tsx","components/PlaybackRate/utils.tsx","utils.ts","components/CurrentTimeLabel/CurrentTimeLabel.tsx","components/MuteButton/MuteButton.tsx","components/Play/PlayButton.tsx","components/Seeker/ValueLabelComponent.tsx","components/Seeker/Seeker.tsx","components/VideoControls/VideoControls.tsx","components/VideoTitle/VideoTitle.tsx","components/Video/Video.tsx","App.tsx"],"names":["keyboardMatch","e","shortcut","key","ctrlKey","PlaybackRate","value","updateValue","onChange","useCallback","currentTarget","onBlur","rate","parseFloat","isNaN","TextField","aria-label","type","inputProps","step","getTime","Date","toISOString","substr","CurrentTimeLabel","currentTime","duration","theme","useTheme","useState","time","setTime","useEffect","Typography","style","color","palette","text","primary","MuteButton","isMuted","toggleMuted","audibleIcon","useMemo","VolumeMute","VolumeUp","IconButton","onClick","PlayButton","isPaused","togglePaused","playPauseIcon","PlayArrow","Pause","ValueLabelComponent","children","open","Tooltip","enterTouchDelay","placement","title","Seeker","updateCurrentTime","onRangeChange","Array","isArray","getValue","Slider","defaultValue","max","disabled","useStyles","makeStyles","root","display","flexDirection","padding","interactiveRoot","justifyContent","interactiveRootLeft","alignItems","VideoControls","playbackRate","updatePlaybackRate","styles","className","VideoTitle","variant","width","height","video","Video","src","selectSrc","videoRef","useRef","setIsPaused","current","play","pause","onPause","onPlay","setIsMuted","useHotkeys","setDuration","setCurrentTime","manualUpdateCurrentTime","addToCurrentTime","delta","leftArrow","rightArrow","onTimeUpdate","setPlaybackRate","valueStr","toPrecision","roundPlaybackRate","addToPlaybackRate","String","upArrow","downArrow","onLoadedMetadata","keyboardShortcuts","onKeyDown","shortcuts","preventDefault","handleKeyboardShortcuts","useEventListener","document","wheelShortcuts","x","val","y","onWheel","deltaX","deltaY","handleWheelShortcuts","passive","ref","muted","appRoot","App","prefersDarkMode","useMediaQuery","createMuiTheme","setSrc","setTitle","inputRef","onSelectVideo","files","length","file","name","URL","revokeObjectURL","objectURL","createObjectURL","click","ThemeProvider","backgroundColor","background","default","accept"],"mappings":"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","file":"static/js/4.676bfe72.chunk.js","sourcesContent":["export interface KeyboardShortcut {\n  key: string;\n  ctrlKey?: boolean;\n  onKeyDown: () => void;\n}\n\nfunction keyboardMatch(e: KeyboardEvent, shortcut: KeyboardShortcut): boolean {\n  return (\n    e.key === shortcut.key &&\n    (!shortcut.ctrlKey || e.ctrlKey === shortcut.ctrlKey)\n  );\n}\n\nexport function handleKeyboardShortcuts(\n  e: KeyboardEvent,\n  shortcuts: KeyboardShortcut[]\n) {\n  for (const shortcut of shortcuts) {\n    if (keyboardMatch(e, shortcut)) {\n      shortcut.onKeyDown();\n      e.preventDefault();\n      return;\n    }\n  }\n}\n\nexport interface WheelShortcuts {\n  x: (val: number) => void;\n  y: (val: number) => void;\n}\n\nexport function handleWheelShortcuts(e: WheelEvent, shortcuts: WheelShortcuts) {\n  if (e.deltaX) {\n    shortcuts.x(e.deltaX);\n  }\n\n  if (e.deltaY) {\n    shortcuts.y(e.deltaY);\n  }\n}\n","import React, { useCallback } from \"react\";\n\nimport { PLAYBACKRATE_STEP } from \"./utils\";\nimport { TextField } from \"@material-ui/core\";\n\nexport interface IPlaybackRate {\n  value: string;\n  updateValue: (value: string) => void;\n}\n\nexport default function PlaybackRate({\n  value,\n  updateValue,\n}: IPlaybackRate): JSX.Element {\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n      updateValue(e.currentTarget.value);\n    },\n    [updateValue]\n  );\n\n  const onBlur = useCallback(() => {\n    const rate = parseFloat(value);\n    if (isNaN(rate)) {\n      updateValue(\"1.0\");\n    }\n  }, [updateValue, value]);\n\n  return (\n    <TextField\n      aria-label=\"Video playback rate\"\n      type=\"number\"\n      value={value}\n      onChange={onChange}\n      onBlur={onBlur}\n      inputProps={{\n        step: PLAYBACKRATE_STEP,\n        \"aria-label\": \"Video playback rate\",\n      }}\n    />\n  );\n}\n","export const PLAYBACKRATE_STEP = 0.2;\nexport const PLAYBACKRATE_MIN = 0.4;\nexport const PLAYBACKRATE_MAX = 20.0;\n\nexport function roundPlaybackRate(value: number) {\n  let valueStr = value.toPrecision(2);\n  return valueStr;\n}\n","export function getTime(value: number) {\n  return new Date(value * 1000).toISOString().substr(11, 8);\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Typography, useTheme } from \"@material-ui/core\";\n\nimport { getTime } from \"../../utils\";\n\nexport interface ICurrentTimeLabel {\n  currentTime: number;\n  duration: number;\n}\n\nexport default function CurrentTimeLabel({\n  currentTime,\n  duration,\n}: ICurrentTimeLabel): JSX.Element {\n  const theme = useTheme();\n\n  const [time, setTime] = useState(\"00:00:00\");\n\n  useEffect(() => {\n    setTime(getTime(currentTime));\n  }, [currentTime]);\n\n  return (\n    <Typography style={{ color: theme.palette.text.primary }}>\n      {time}/{getTime(duration)}\n    </Typography>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { VolumeMute, VolumeUp } from \"@material-ui/icons\";\n\nimport { IconButton } from \"@material-ui/core\";\n\nexport interface IPlayButton {\n  isMuted: boolean;\n  toggleMuted: () => void;\n}\n\nexport default function MuteButton({\n  isMuted,\n  toggleMuted,\n}: IPlayButton): JSX.Element {\n  const audibleIcon = useMemo(() => {\n    return isMuted ? <VolumeMute /> : <VolumeUp />;\n  }, [isMuted]);\n\n  return (\n    <IconButton aria-label=\"Toggle muted\" onClick={toggleMuted}>\n      {audibleIcon}\n    </IconButton>\n  );\n}\n","import { Pause, PlayArrow } from \"@material-ui/icons\";\nimport React, { useMemo } from \"react\";\n\nimport { IconButton } from \"@material-ui/core\";\n\nexport interface IPlayButton {\n  isPaused: boolean;\n  togglePaused: () => void;\n}\n\nexport default function PlayButton({\n  isPaused,\n  togglePaused,\n}: IPlayButton): JSX.Element {\n  const playPauseIcon = useMemo(() => {\n    return isPaused ? <PlayArrow /> : <Pause />;\n  }, [isPaused]);\n\n  return (\n    <IconButton aria-label=\"Toggle paused\" onClick={togglePaused}>\n      {playPauseIcon}\n    </IconButton>\n  );\n}\n","import React from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { getTime } from \"../../utils\";\n\nexport interface IValueLabelComponentProps {\n  children: React.ReactElement;\n  open: boolean;\n  value: number;\n}\n\nexport default function ValueLabelComponent({\n  children,\n  open,\n  value,\n}: IValueLabelComponentProps): JSX.Element {\n  const time = getTime(value);\n  return (\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={time}>\n      {children}\n    </Tooltip>\n  );\n}\n","import React, { useCallback } from \"react\";\n\nimport { Slider } from \"@material-ui/core\";\nimport ValueLabelComponent from \"./ValueLabelComponent\";\n\nexport interface ISeeker {\n  currentTime: number;\n  duration: number;\n  updateCurrentTime: (value: number) => void;\n}\n\nfunction getValue(value: number | number[]) {\n  if (Array.isArray(value)) {\n    return value[0] || 0;\n  }\n  return value;\n}\n\nexport default function Seeker({\n  currentTime,\n  duration,\n  updateCurrentTime,\n}: ISeeker): JSX.Element {\n  const onRangeChange = useCallback(\n    (e: any, value: number | number[]) => {\n      updateCurrentTime(getValue(value));\n    },\n    [updateCurrentTime]\n  );\n\n  return (\n    <Slider\n      value={currentTime}\n      defaultValue={0}\n      max={duration}\n      onChange={onRangeChange}\n      disabled={duration === 0}\n      ValueLabelComponent={ValueLabelComponent}\n    />\n  );\n}\n","import CurrentTimeLabel from \"../CurrentTimeLabel\";\nimport MuteButton from \"../MuteButton\";\nimport PlayButton from \"../Play\";\nimport PlaybackRate from \"../PlaybackRate\";\nimport React from \"react\";\nimport Seeker from \"../Seeker\";\nimport { makeStyles } from \"@material-ui/core\";\n\nexport interface IVideoControls {\n  duration: number;\n  currentTime: number;\n  isPaused: boolean;\n  togglePaused: () => void;\n  isMuted: boolean;\n  toggleMuted: () => void;\n  updateCurrentTime: (value: number) => void;\n  playbackRate: string;\n  updatePlaybackRate: (value: string) => void;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"16px\",\n  },\n  interactiveRoot: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  interactiveRootLeft: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n});\n\nexport default function VideoControls({\n  duration,\n  currentTime,\n  isPaused,\n  togglePaused,\n  isMuted,\n  toggleMuted,\n  updateCurrentTime,\n  playbackRate,\n  updatePlaybackRate,\n}: IVideoControls): JSX.Element {\n  const styles = useStyles();\n  return (\n    <div className={styles.root}>\n      <Seeker\n        currentTime={currentTime}\n        duration={duration}\n        updateCurrentTime={updateCurrentTime}\n      />\n\n      <div className={styles.interactiveRoot}>\n        <div className={styles.interactiveRootLeft}>\n          <PlayButton isPaused={isPaused} togglePaused={togglePaused} />\n          <MuteButton isMuted={isMuted} toggleMuted={toggleMuted} />\n          <CurrentTimeLabel currentTime={currentTime} duration={duration} />\n        </div>\n        <PlaybackRate value={playbackRate} updateValue={updatePlaybackRate} />\n      </div>\n    </div>\n  );\n}\n","import { Typography, makeStyles, useTheme } from \"@material-ui/core\";\n\nimport React from \"react\";\n\nexport interface IVideoTitle {\n  children?: string;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    padding: \"16px\",\n  },\n});\n\nexport default function VideoTitle({ children }: IVideoTitle): JSX.Element {\n  const theme = useTheme();\n  const styles = useStyles();\n\n  return (\n    <Typography\n      variant=\"h6\"\n      style={{ color: theme.palette.text.primary }}\n      className={styles.root}\n    >\n      {children}\n    </Typography>\n  );\n}\n","import {\n  KeyboardShortcut,\n  WheelShortcuts,\n  handleKeyboardShortcuts,\n  handleWheelShortcuts,\n} from \"./handleVideoShortcuts\";\nimport { PLAYBACKRATE_MAX, roundPlaybackRate } from \"../PlaybackRate/utils\";\nimport { PLAYBACKRATE_MIN, PLAYBACKRATE_STEP } from \"../PlaybackRate\";\nimport React, { useCallback, useRef, useState } from \"react\";\n\nimport VideoControls from \"../VideoControls\";\nimport VideoTitle from \"../VideoTitle\";\nimport { makeStyles } from \"@material-ui/core\";\nimport useEventListener from \"react-use-event-listener\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\n\nconst TRAVEL_DISTANCE = 10;\n\nexport interface IVideo {\n  src?: string;\n  selectSrc: () => void;\n  title?: string;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100vw\",\n    height: \"100vh\",\n  },\n  video: {\n    width: \"100vw\",\n  },\n});\n\nexport default function Video({ src, selectSrc, title }: IVideo): JSX.Element {\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n  const styles = useStyles();\n\n  //#region Play/pause\n  const [isPaused, setIsPaused] = useState(true);\n  const togglePaused = useCallback(() => {\n    if (isPaused) {\n      videoRef.current?.play();\n    } else {\n      videoRef.current?.pause();\n    }\n    setIsPaused(!isPaused);\n  }, [isPaused]);\n\n  const onPause = useCallback(() => {\n    setIsPaused(true);\n  }, []);\n\n  const onPlay = useCallback(() => {\n    setIsPaused(false);\n  }, []);\n  //#endregion\n\n  //#region Mute\n  const [isMuted, setIsMuted] = useState(false);\n  const toggleMuted = useCallback(() => {\n    setIsMuted(!isMuted);\n  }, [isMuted]);\n  useHotkeys(\"m\", toggleMuted);\n  //#endregion\n\n  //#region currentTime and duration\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const manualUpdateCurrentTime = useCallback((value: number) => {\n    if (videoRef.current) {\n      videoRef.current.currentTime = value;\n    }\n    setCurrentTime(value);\n  }, []);\n\n  const addToCurrentTime = useCallback(\n    (delta: number) => {\n      if (videoRef.current) {\n        let value = videoRef.current.currentTime + delta;\n        if (value < 0) {\n          value = 0;\n        } else if (value > duration) {\n          value = duration;\n        }\n\n        manualUpdateCurrentTime(value);\n      }\n    },\n    [duration, manualUpdateCurrentTime]\n  );\n\n  const leftArrow = useCallback(() => {\n    addToCurrentTime(-TRAVEL_DISTANCE);\n  }, [addToCurrentTime]);\n\n  const rightArrow = useCallback(() => {\n    addToCurrentTime(TRAVEL_DISTANCE);\n  }, [addToCurrentTime]);\n\n  const onTimeUpdate = useCallback(() => {\n    const time = videoRef.current?.currentTime;\n    if (time) {\n      setCurrentTime(time);\n    }\n  }, []);\n  //#endregion\n\n  //#region Playback rate\n  const [playbackRate, setPlaybackRate] = useState(\"1.0\");\n\n  const updatePlaybackRate = useCallback((valueStr: string) => {\n    let value = parseFloat(valueStr);\n    if (isNaN(value)) {\n      setPlaybackRate(\"\");\n    } else if (videoRef.current) {\n      if (value < PLAYBACKRATE_MIN) {\n        value = PLAYBACKRATE_MIN;\n      } else if (value > PLAYBACKRATE_MAX) {\n        value = PLAYBACKRATE_MAX;\n      }\n      valueStr = roundPlaybackRate(value);\n      setPlaybackRate(valueStr);\n      videoRef.current.playbackRate = value;\n    }\n  }, []);\n\n  const addToPlaybackRate = useCallback(\n    (delta: number) => {\n      if (videoRef.current) {\n        updatePlaybackRate(String(videoRef.current.playbackRate + delta));\n      }\n    },\n    [updatePlaybackRate]\n  );\n\n  const upArrow = useCallback(() => {\n    addToPlaybackRate(PLAYBACKRATE_STEP);\n  }, [addToPlaybackRate]);\n\n  const downArrow = useCallback(() => {\n    addToPlaybackRate(-PLAYBACKRATE_STEP);\n  }, [addToPlaybackRate]);\n  //#endregion\n\n  const onLoadedMetadata = useCallback(() => {\n    const video = videoRef.current;\n    setDuration(video?.duration || 0);\n\n    // Play\n    setIsPaused(false);\n    video?.play();\n\n    // Playback rate\n    const rate = parseFloat(playbackRate);\n    if (!isNaN(rate) && video) {\n      video.playbackRate = rate;\n    }\n  }, [playbackRate]);\n\n  //#region Keyboard shortcuts\n  const keyboardShortcuts: KeyboardShortcut[] = [\n    { key: \"m\", onKeyDown: toggleMuted },\n    { key: \" \", onKeyDown: togglePaused },\n    { key: \"o\", ctrlKey: true, onKeyDown: selectSrc },\n    { key: \"ArrowLeft\", onKeyDown: leftArrow },\n    { key: \"ArrowRight\", onKeyDown: rightArrow },\n    { key: \"ArrowUp\", onKeyDown: upArrow },\n    { key: \"ArrowDown\", onKeyDown: downArrow },\n  ];\n\n  const onKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      handleKeyboardShortcuts(e, keyboardShortcuts);\n    },\n    [keyboardShortcuts]\n  );\n\n  useEventListener(\"keydown\", onKeyDown, document);\n  //#endregion\n\n  //#region Wheel shortcuts\n  const xWheel = useCallback(\n    (val: number) => {\n      addToCurrentTime(TRAVEL_DISTANCE * (val / 1000));\n    },\n    [addToCurrentTime]\n  );\n\n  const yWheel = useCallback(\n    (val: number) => {\n      addToPlaybackRate(PLAYBACKRATE_STEP * -(val / 100));\n    },\n    [addToPlaybackRate]\n  );\n\n  const wheelShortcuts: WheelShortcuts = {\n    x: xWheel,\n    y: yWheel,\n  };\n\n  const onWheel = useCallback(\n    (e: WheelEvent) => {\n      handleWheelShortcuts(e, wheelShortcuts);\n    },\n    [wheelShortcuts]\n  );\n\n  useEventListener(\"wheel\", onWheel, document, { passive: true });\n  //#endregion\n\n  return (\n    <div className={styles.root}>\n      <VideoTitle>{title}</VideoTitle>\n      <video\n        className={styles.video}\n        ref={videoRef}\n        src={src}\n        muted={isMuted}\n        onLoadedMetadata={onLoadedMetadata}\n        onTimeUpdate={onTimeUpdate}\n        onPause={onPause}\n        onPlay={onPlay}\n      />\n      <VideoControls\n        isPaused={isPaused}\n        togglePaused={togglePaused}\n        isMuted={isMuted}\n        toggleMuted={toggleMuted}\n        duration={duration}\n        currentTime={currentTime}\n        updateCurrentTime={manualUpdateCurrentTime}\n        playbackRate={playbackRate}\n        updatePlaybackRate={updatePlaybackRate}\n      />\n    </div>\n  );\n}\n","import React, { useCallback, useMemo, useRef, useState } from \"react\";\nimport {\n  ThemeProvider,\n  createMuiTheme,\n  makeStyles,\n  useMediaQuery,\n} from \"@material-ui/core\";\n\nimport Video from \"./components/Video\";\n\nconst useStyles = makeStyles({\n  appRoot: {\n    height: \"100vh\",\n    width: \"100vw\",\n  },\n});\n\nexport default function App(): JSX.Element {\n  const styles = useStyles();\n\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  const [src, setSrc] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  const onSelectVideo = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (e.currentTarget.files?.length) {\n        const file = e.currentTarget.files[0];\n        setTitle(file.name);\n        URL.revokeObjectURL(src);\n        const objectURL = URL.createObjectURL(file);\n        setSrc(objectURL);\n      }\n    },\n    [src]\n  );\n\n  const selectSrc = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div\n        style={{ backgroundColor: theme.palette.background.default }}\n        className={styles.appRoot}\n      >\n        <input\n          aria-label=\"Press Ctrl+O to open a video from the local filesystem\"\n          ref={inputRef}\n          type=\"file\"\n          accept=\"video/*\"\n          onChange={onSelectVideo}\n          style={{ display: \"none\" }}\n        />\n        <Video src={src} selectSrc={selectSrc} title={title} />\n      </div>\n    </ThemeProvider>\n  );\n}\n"],"sourceRoot":""}