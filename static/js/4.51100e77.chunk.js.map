{"version":3,"sources":["components/CurrentTimeLabel/Label.tsx","utils.ts","components/CurrentTimeLabel/CurrentTimeLabel.tsx","components/MuteButton/MuteButton.tsx","components/Play/PlayButton.tsx","components/PlaybackRate/PlaybackRate.tsx","components/PlaybackRate/utils.ts","components/Seeker/ValueLabelComponent.tsx","components/Seeker/Seeker.tsx","components/VideoControls/VideoControls.tsx","components/VideoTitle/VideoTitle.tsx","components/Video/handleVideoShortcuts.ts","components/Video/useKeyboardShortcuts.ts","components/Video/utils.ts","components/Video/Video.tsx","components/Video/usePause.ts","components/Video/useMute.ts","components/Video/useCurrentTime.ts","components/Video/usePlaybackRate.ts","components/Video/useWheelShortcuts.ts","App.tsx"],"names":["Label","children","theme","useTheme","Typography","style","color","palette","text","primary","padding","getTime","value","Date","toISOString","substr","CurrentTimeLabel","currentTime","duration","playbackRate","useState","time","setTime","remainingTime","setRemainingTime","remainingAtRate","setRemainingAtRate","useEffect","remaining","rate","parseFloat","Grid","container","alignItems","Divider","orientation","flexItem","MuteButton","isMuted","toggleMuted","audibleIcon","useMemo","VolumeMute","VolumeUp","IconButton","aria-label","onClick","PlayButton","isPaused","togglePaused","playPauseIcon","PlayArrow","Pause","useStyles","makeStyles","root","PlaybackRate","updateValue","styles","onChange","useCallback","e","currentTarget","onBlur","isNaN","TextField","className","type","inputProps","step","ValueLabelComponent","open","Tooltip","enterTouchDelay","placement","title","Seeker","updateCurrentTime","onRangeChange","Array","isArray","getValue","Slider","defaultValue","max","disabled","VIDEO_CONTROLS_HEIGHT","height","display","alignContent","flexDirection","interactiveRoot","justifyContent","interactiveRootLeft","VideoControls","updatePlaybackRate","VideoTitle","variant","keyboardMatch","shortcut","key","ctrlKey","useKeyboardShortcuts","addToCurrentTime","addToPlaybackRate","selectSrc","keyboardShortcuts","onKeyDown","shortcuts","preventDefault","handleKeyboardShortcuts","video","width","Video","src","videoRef","useRef","isVideoLoaded","setIsVideoLoaded","setDuration","videoLoaded","setIsPaused","play","pause","onPause","onPlay","usePause","current","setIsMuted","useMute","setCurrentTime","isEvent","delta","onTimeUpdate","useCurrentTime","setPlaybackRate","valueStr","toPrecision","roundPlaybackRate","String","usePlaybackRate","useEventListener","document","onWheel","wheelShortcuts","x","val","y","deltaX","deltaY","handleWheelShortcuts","useWheelShortcuts","passive","onLoadedMetadata","ref","muted","App","prefersDarkMode","useMediaQuery","createMuiTheme","setSrc","setTitle","inputRef","onSelectVideo","files","length","file","name","URL","revokeObjectURL","objectURL","createObjectURL","click","ThemeProvider","backgroundColor","background","default","accept"],"mappings":"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","file":"static/js/4.51100e77.chunk.js","sourcesContent":["import { Typography, useTheme } from \"@material-ui/core\";\n\nimport React from \"react\";\n\nexport interface ILabel {\n  children: string | string[];\n}\n\nexport default function Label({ children }: ILabel): JSX.Element {\n  const theme = useTheme();\n\n  return (\n    <Typography style={{ color: theme.palette.text.primary, padding: 8 }}>\n      {children}\n    </Typography>\n  );\n}\n","export function getTime(value: number) {\n  return new Date(value * 1000).toISOString().substr(11, 8);\n}\n","import { Divider, Grid } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\n\nimport Label from \"./Label\";\nimport { getTime } from \"../../utils\";\n\nexport interface ICurrentTimeLabel {\n  currentTime: number;\n  duration: number;\n  playbackRate: string;\n}\n\nexport default function CurrentTimeLabel({\n  currentTime,\n  duration,\n  playbackRate,\n}: ICurrentTimeLabel): JSX.Element {\n  const [time, setTime] = useState(\"00:00:00\");\n  const [remainingTime, setRemainingTime] = useState(\"00:00:00\");\n  const [remainingAtRate, setRemainingAtRate] = useState(\"00:00:00\");\n\n  useEffect(() => {\n    setTime(getTime(currentTime));\n\n    const remaining = duration - currentTime;\n    setRemainingTime(getTime(remaining));\n\n    const rate = parseFloat(playbackRate) || 1;\n    setRemainingAtRate(getTime(remaining / rate));\n  }, [currentTime, duration, playbackRate]);\n\n  return (\n    <Grid container alignItems=\"center\">\n      <Divider orientation=\"vertical\" flexItem />\n      <Label>\n        {time}/{getTime(duration)}\n      </Label>\n      <Divider orientation=\"vertical\" flexItem />\n      <Label>{remainingTime} remaining</Label>\n      <Divider orientation=\"vertical\" flexItem />\n      <Label>\n        {remainingAtRate} remaining at ×{playbackRate}\n      </Label>\n    </Grid>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { VolumeMute, VolumeUp } from \"@material-ui/icons\";\n\nimport { IconButton } from \"@material-ui/core\";\n\nexport interface IPlayButton {\n  isMuted: boolean;\n  toggleMuted: () => void;\n}\n\nexport default function MuteButton({\n  isMuted,\n  toggleMuted,\n}: IPlayButton): JSX.Element {\n  const audibleIcon = useMemo(() => {\n    return isMuted ? <VolumeMute /> : <VolumeUp />;\n  }, [isMuted]);\n\n  return (\n    <IconButton aria-label=\"Toggle muted\" onClick={toggleMuted}>\n      {audibleIcon}\n    </IconButton>\n  );\n}\n","import { Pause, PlayArrow } from \"@material-ui/icons\";\nimport React, { useMemo } from \"react\";\n\nimport { IconButton } from \"@material-ui/core\";\n\nexport interface IPlayButton {\n  isPaused: boolean;\n  togglePaused: () => void;\n}\n\nexport default function PlayButton({\n  isPaused,\n  togglePaused,\n}: IPlayButton): JSX.Element {\n  const playPauseIcon = useMemo(() => {\n    return isPaused ? <PlayArrow /> : <Pause />;\n  }, [isPaused]);\n\n  return (\n    <IconButton aria-label=\"Toggle paused\" onClick={togglePaused}>\n      {playPauseIcon}\n    </IconButton>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { TextField, makeStyles } from \"@material-ui/core\";\n\nimport { PLAYBACKRATE_STEP } from \"./utils\";\n\nexport interface IPlaybackRate {\n  value: string;\n  updateValue: (value: string) => void;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    padding: 16,\n  },\n});\n\nexport default function PlaybackRate({\n  value,\n  updateValue,\n}: IPlaybackRate): JSX.Element {\n  const styles = useStyles();\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n      updateValue(e.currentTarget.value);\n    },\n    [updateValue]\n  );\n\n  const onBlur = useCallback(() => {\n    const rate = parseFloat(value);\n    if (isNaN(rate)) {\n      updateValue(\"1.0\");\n    }\n  }, [updateValue, value]);\n\n  return (\n    <TextField\n      className={styles.root}\n      aria-label=\"Video playback rate\"\n      type=\"number\"\n      value={value}\n      onChange={onChange}\n      onBlur={onBlur}\n      inputProps={{\n        step: PLAYBACKRATE_STEP,\n        \"aria-label\": \"Video playback rate\",\n      }}\n    />\n  );\n}\n","export const PLAYBACKRATE_STEP = 0.2;\nexport const PLAYBACKRATE_MIN = 0.4;\nexport const PLAYBACKRATE_MAX = 20.0;\n\nexport function roundPlaybackRate(value: number) {\n  let valueStr = value.toPrecision(2);\n  return valueStr;\n}\n","import React from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { getTime } from \"../../utils\";\n\nexport interface IValueLabelComponentProps {\n  children: React.ReactElement;\n  open: boolean;\n  value: number;\n}\n\nexport default function ValueLabelComponent({\n  children,\n  open,\n  value,\n}: IValueLabelComponentProps): JSX.Element {\n  const time = getTime(value);\n  return (\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={time}>\n      {children}\n    </Tooltip>\n  );\n}\n","import React, { useCallback } from \"react\";\n\nimport { Slider } from \"@material-ui/core\";\nimport ValueLabelComponent from \"./ValueLabelComponent\";\n\nexport interface ISeeker {\n  currentTime: number;\n  duration: number;\n  updateCurrentTime: (value: number) => void;\n}\n\nfunction getValue(value: number | number[]) {\n  if (Array.isArray(value)) {\n    return value[0] || 0;\n  }\n  return value;\n}\n\nexport default function Seeker({\n  currentTime,\n  duration,\n  updateCurrentTime,\n}: ISeeker): JSX.Element {\n  const onRangeChange = useCallback(\n    (e: any, value: number | number[]) => {\n      updateCurrentTime(getValue(value));\n    },\n    [updateCurrentTime]\n  );\n\n  return (\n    <Slider\n      value={currentTime}\n      defaultValue={0}\n      max={duration}\n      onChange={onRangeChange}\n      disabled={duration === 0}\n      ValueLabelComponent={ValueLabelComponent}\n    />\n  );\n}\n","import CurrentTimeLabel from \"../CurrentTimeLabel\";\nimport MuteButton from \"../MuteButton\";\nimport PlayButton from \"../Play\";\nimport PlaybackRate from \"../PlaybackRate\";\nimport React from \"react\";\nimport Seeker from \"../Seeker\";\nimport { makeStyles } from \"@material-ui/core\";\n\nexport interface IVideoControls {\n  duration: number;\n  currentTime: number;\n  isPaused: boolean;\n  togglePaused: () => void;\n  isMuted: boolean;\n  toggleMuted: () => void;\n  updateCurrentTime: (value: number) => void;\n  playbackRate: string;\n  updatePlaybackRate: (value: string) => void;\n}\n\nconst height = 76;\nconst padding = 16;\nexport const VIDEO_CONTROLS_HEIGHT = `${padding * 2 + height}px`;\n\nconst useStyles = makeStyles({\n  root: {\n    height,\n    display: \"flex\",\n    alignContent: \"center\",\n    flexDirection: \"column\",\n    padding,\n  },\n  interactiveRoot: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  interactiveRootLeft: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n});\n\nexport default function VideoControls({\n  duration,\n  currentTime,\n  isPaused,\n  togglePaused,\n  isMuted,\n  toggleMuted,\n  updateCurrentTime,\n  playbackRate,\n  updatePlaybackRate,\n}: IVideoControls): JSX.Element {\n  const styles = useStyles();\n  return (\n    <div className={styles.root}>\n      <Seeker\n        currentTime={currentTime}\n        duration={duration}\n        updateCurrentTime={updateCurrentTime}\n      />\n\n      <div className={styles.interactiveRoot}>\n        <div className={styles.interactiveRootLeft}>\n          <PlayButton isPaused={isPaused} togglePaused={togglePaused} />\n          <MuteButton isMuted={isMuted} toggleMuted={toggleMuted} />\n          <CurrentTimeLabel\n            currentTime={currentTime}\n            duration={duration}\n            playbackRate={playbackRate}\n          />\n        </div>\n        <PlaybackRate value={playbackRate} updateValue={updatePlaybackRate} />\n      </div>\n    </div>\n  );\n}\n","import { Typography, makeStyles, useTheme } from \"@material-ui/core\";\n\nimport React from \"react\";\n\nexport interface IVideoTitle {\n  children?: string;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    padding: \"16px\",\n  },\n});\n\n// NOTE: this is hard coded according to Typography\nexport const VIDEO_TITLE_HEIGHT = \"64px\";\n\nexport default function VideoTitle({ children }: IVideoTitle): JSX.Element {\n  const theme = useTheme();\n  const styles = useStyles();\n\n  return (\n    <Typography\n      variant=\"h6\"\n      style={{ color: theme.palette.text.primary }}\n      className={styles.root}\n    >\n      {children || \"Open a video file (Ctrl + O)\"}\n    </Typography>\n  );\n}\n","export interface KeyboardShortcut {\n  key: string;\n  ctrlKey?: boolean;\n  onKeyDown: () => void;\n}\n\nfunction keyboardMatch(e: KeyboardEvent, shortcut: KeyboardShortcut): boolean {\n  return (\n    e.key === shortcut.key &&\n    (!shortcut.ctrlKey || e.ctrlKey === shortcut.ctrlKey)\n  );\n}\n\nexport function handleKeyboardShortcuts(\n  e: KeyboardEvent,\n  shortcuts: KeyboardShortcut[]\n) {\n  for (const shortcut of shortcuts) {\n    if (keyboardMatch(e, shortcut)) {\n      shortcut.onKeyDown();\n      e.preventDefault();\n      return;\n    }\n  }\n}\n\nexport interface WheelShortcuts {\n  x: (val: number) => void;\n  y: (val: number) => void;\n}\n\nexport function handleWheelShortcuts(e: WheelEvent, shortcuts: WheelShortcuts) {\n  if (e.deltaX) {\n    shortcuts.x(e.deltaX);\n  }\n\n  if (e.deltaY) {\n    shortcuts.y(e.deltaY);\n  }\n}\n","import {\n  KeyboardShortcut,\n  handleKeyboardShortcuts,\n} from \"./handleVideoShortcuts\";\n\nimport { PLAYBACKRATE_STEP } from \"../PlaybackRate\";\nimport { TRAVEL_DISTANCE } from \"./utils\";\nimport { useCallback } from \"react\";\n\nexport interface IUseKeyboardShortcuts {\n  addToCurrentTime: (delta: number) => void;\n  addToPlaybackRate: (delta: number) => void;\n  selectSrc: () => void;\n  toggleMuted: () => void;\n  togglePaused: () => void;\n}\n\nexport default function useKeyboardShortcuts({\n  addToCurrentTime,\n  addToPlaybackRate,\n  selectSrc,\n  toggleMuted,\n  togglePaused,\n}: IUseKeyboardShortcuts) {\n  const leftArrow = () => addToCurrentTime(-TRAVEL_DISTANCE);\n\n  const rightArrow = () => addToCurrentTime(TRAVEL_DISTANCE);\n\n  const upArrow = () => addToPlaybackRate(PLAYBACKRATE_STEP);\n\n  const downArrow = () => addToPlaybackRate(-PLAYBACKRATE_STEP);\n\n  const keyboardShortcuts: KeyboardShortcut[] = [\n    { key: \"m\", onKeyDown: toggleMuted },\n    { key: \" \", onKeyDown: togglePaused },\n    { key: \"o\", ctrlKey: true, onKeyDown: selectSrc },\n    { key: \"ArrowLeft\", onKeyDown: leftArrow },\n    { key: \"ArrowRight\", onKeyDown: rightArrow },\n    { key: \"ArrowUp\", onKeyDown: upArrow },\n    { key: \"ArrowDown\", onKeyDown: downArrow },\n  ];\n\n  const onKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      handleKeyboardShortcuts(e, keyboardShortcuts);\n    },\n    [keyboardShortcuts]\n  );\n\n  return onKeyDown;\n}\n","export type Video = HTMLVideoElement | null;\nexport const TRAVEL_DISTANCE = 10;\n","import React, { useCallback, useRef, useState } from \"react\";\n\nimport { VIDEO_CONTROLS_HEIGHT } from \"../VideoControls/VideoControls\";\nimport { VIDEO_TITLE_HEIGHT } from \"../VideoTitle/VideoTitle\";\nimport VideoControls from \"../VideoControls\";\nimport VideoTitle from \"../VideoTitle\";\nimport { makeStyles } from \"@material-ui/core\";\nimport useCurrentTime from \"./useCurrentTime\";\nimport useEventListener from \"react-use-event-listener\";\nimport useKeyboardShortcuts from \"./useKeyboardShortcuts\";\nimport useMute from \"./useMute\";\nimport usePause from \"./usePause\";\nimport usePlaybackRate from \"./usePlaybackRate\";\nimport useWheelShortcuts from \"./useWheelShortcuts\";\n\nexport interface IVideo {\n  src?: string;\n  selectSrc: () => void;\n  title?: string;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    // width: \"100vw\",\n    height: \"100vh\",\n  },\n  video: {\n    height:\n      `calc(100vh - ${VIDEO_TITLE_HEIGHT} ` +\n      `- ${VIDEO_CONTROLS_HEIGHT} - 10px)`,\n    width: \"100vw\",\n  },\n});\n\nexport default function Video({ src, selectSrc, title }: IVideo): JSX.Element {\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n  const styles = useStyles();\n\n  const [isVideoLoaded, setIsVideoLoaded] = useState(false);\n  const [duration, setDuration] = useState(0);\n\n  const { isPaused, setIsPaused, togglePaused, onPause, onPlay } = usePause(\n    videoRef.current,\n    isVideoLoaded\n  );\n\n  const { isMuted, toggleMuted } = useMute(videoRef.current);\n\n  const {\n    currentTime,\n    onTimeUpdate,\n    updateCurrentTime,\n    addToCurrentTime,\n  } = useCurrentTime(videoRef.current, duration);\n\n  const {\n    playbackRate,\n    updatePlaybackRate,\n    addToPlaybackRate,\n  } = usePlaybackRate(videoRef.current);\n\n  // Keyboard shortcuts\n  const onKeyDown = useKeyboardShortcuts({\n    addToCurrentTime,\n    addToPlaybackRate,\n    selectSrc,\n    toggleMuted,\n    togglePaused,\n  });\n  useEventListener(\"keydown\", onKeyDown, document);\n\n  // Wheel shortcuts\n  const onWheel = useWheelShortcuts({ addToCurrentTime, addToPlaybackRate });\n  useEventListener(\"wheel\", onWheel, document, { passive: true });\n\n  // On loaded\n  const onLoadedMetadata = useCallback(() => {\n    const video = videoRef.current;\n    setIsVideoLoaded(true);\n    setDuration(video?.duration || 0);\n\n    // Play\n    setIsPaused(false);\n    video?.play();\n\n    // Playback rate\n    const rate = parseFloat(playbackRate);\n    if (!isNaN(rate) && video) {\n      video.playbackRate = rate;\n    }\n  }, [playbackRate, setIsPaused]);\n\n  return (\n    <div className={styles.root}>\n      <VideoTitle>{title}</VideoTitle>\n      <video\n        className={styles.video}\n        ref={videoRef}\n        src={src}\n        muted={isMuted}\n        onLoadedMetadata={onLoadedMetadata}\n        onTimeUpdate={onTimeUpdate}\n        onPause={onPause}\n        onPlay={onPlay}\n      />\n      <VideoControls\n        isPaused={isPaused}\n        togglePaused={togglePaused}\n        isMuted={isMuted}\n        toggleMuted={toggleMuted}\n        duration={duration}\n        currentTime={currentTime}\n        updateCurrentTime={updateCurrentTime}\n        playbackRate={playbackRate}\n        updatePlaybackRate={updatePlaybackRate}\n      />\n    </div>\n  );\n}\n","import { useCallback, useState } from \"react\";\n\nimport { Video } from \"./utils\";\n\nexport default function usePause(video: Video, videoLoaded: boolean) {\n  const [isPaused, setIsPaused] = useState(true);\n\n  const togglePaused = useCallback(() => {\n    if (video && videoLoaded) {\n      if (isPaused) {\n        video.play();\n      } else {\n        video.pause();\n      }\n      setIsPaused(!isPaused);\n    }\n  }, [isPaused, video, videoLoaded]);\n\n  const onPause = useCallback(() => {\n    setIsPaused(true);\n  }, []);\n\n  const onPlay = useCallback(() => {\n    setIsPaused(false);\n  }, []);\n\n  return { isPaused, setIsPaused, togglePaused, onPause, onPlay };\n}\n","import { useCallback, useState } from \"react\";\n\nimport { Video } from \"./utils\";\n\nexport default function useMute(video: Video) {\n  const [isMuted, setIsMuted] = useState(false);\n\n  const toggleMuted = useCallback(() => {\n    setIsMuted(!isMuted);\n  }, [isMuted]);\n\n  return { isMuted, setIsMuted, toggleMuted };\n}\n","import { useCallback, useState } from \"react\";\n\nimport { Video } from \"./utils\";\n\nexport default function useCurrentTime(video: Video, duration: number) {\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const updateCurrentTime = useCallback(\n    (value: number, isEvent = false) => {\n      if (video && !isEvent) {\n        video.currentTime = value;\n      }\n      setCurrentTime(value);\n    },\n    [video]\n  );\n\n  const addToCurrentTime = useCallback(\n    (delta: number) => {\n      if (video) {\n        let value = video.currentTime + delta;\n\n        if (value < 0) {\n          value = 0;\n        } else if (value > duration) {\n          value = duration;\n        }\n\n        updateCurrentTime(value);\n      }\n    },\n    [duration, updateCurrentTime, video]\n  );\n\n  const onTimeUpdate = useCallback(() => {\n    const time = video?.currentTime;\n    if (time) {\n      updateCurrentTime(time, true);\n    }\n  }, [updateCurrentTime, video]);\n\n  return {\n    currentTime,\n    setCurrentTime,\n    updateCurrentTime,\n    addToCurrentTime,\n    onTimeUpdate,\n  };\n}\n","import { PLAYBACKRATE_MAX, PLAYBACKRATE_MIN } from \"../PlaybackRate\";\nimport { useCallback, useState } from \"react\";\n\nimport { Video } from \"./utils\";\nimport { roundPlaybackRate } from \"../PlaybackRate/utils\";\n\nexport default function usePlaybackRate(video: Video) {\n  const [playbackRate, setPlaybackRate] = useState(\"1.0\");\n\n  const updatePlaybackRate = useCallback(\n    (valueStr: string) => {\n      let value = parseFloat(valueStr);\n      if (isNaN(value)) {\n        setPlaybackRate(\"\");\n      } else if (video) {\n        if (value < PLAYBACKRATE_MIN) {\n          value = PLAYBACKRATE_MIN;\n        } else if (value > PLAYBACKRATE_MAX) {\n          value = PLAYBACKRATE_MAX;\n        }\n        valueStr = roundPlaybackRate(value);\n        setPlaybackRate(valueStr);\n        video.playbackRate = value;\n      }\n    },\n    [video]\n  );\n\n  const addToPlaybackRate = useCallback(\n    (delta: number) => {\n      if (video) {\n        updatePlaybackRate(String(video.playbackRate + delta));\n      }\n    },\n    [updatePlaybackRate, video]\n  );\n\n  return {\n    playbackRate,\n    setPlaybackRate,\n    updatePlaybackRate,\n    addToPlaybackRate,\n  };\n}\n","import { WheelShortcuts, handleWheelShortcuts } from \"./handleVideoShortcuts\";\n\nimport { PLAYBACKRATE_STEP } from \"../PlaybackRate\";\nimport { TRAVEL_DISTANCE } from \"./utils\";\nimport { useCallback } from \"react\";\n\nexport interface IUseWheelShortcuts {\n  addToCurrentTime: (delta: number) => void;\n  addToPlaybackRate: (delta: number) => void;\n}\n\nexport default function useWheelShortcuts({\n  addToCurrentTime,\n  addToPlaybackRate,\n}: IUseWheelShortcuts) {\n  const xWheel = useCallback(\n    (val: number) => {\n      addToCurrentTime(TRAVEL_DISTANCE * (val / 1000));\n    },\n    [addToCurrentTime]\n  );\n\n  const yWheel = useCallback(\n    (val: number) => {\n      addToPlaybackRate(PLAYBACKRATE_STEP * -(val / 100));\n    },\n    [addToPlaybackRate]\n  );\n\n  const wheelShortcuts: WheelShortcuts = {\n    x: xWheel,\n    y: yWheel,\n  };\n\n  const onWheel = useCallback(\n    (e: WheelEvent) => {\n      handleWheelShortcuts(e, wheelShortcuts);\n    },\n    [wheelShortcuts]\n  );\n\n  return onWheel;\n}\n","import React, { useCallback, useMemo, useRef, useState } from \"react\";\nimport {\n  ThemeProvider,\n  createMuiTheme,\n  useMediaQuery,\n} from \"@material-ui/core\";\n\nimport Video from \"./components/Video\";\n\nexport default function App(): JSX.Element {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  const [src, setSrc] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  const onSelectVideo = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (e.currentTarget.files?.length) {\n        const file = e.currentTarget.files[0];\n        setTitle(file.name);\n        URL.revokeObjectURL(src);\n        const objectURL = URL.createObjectURL(file);\n        setSrc(objectURL);\n      }\n    },\n    [src]\n  );\n\n  const selectSrc = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div style={{ backgroundColor: theme.palette.background.default }}>\n        <input\n          aria-label=\"Press Ctrl+O to open a video from the local filesystem\"\n          ref={inputRef}\n          type=\"file\"\n          accept=\"video/*\"\n          onChange={onSelectVideo}\n          style={{ display: \"none\" }}\n        />\n        <Video src={src} selectSrc={selectSrc} title={title} />\n      </div>\n    </ThemeProvider>\n  );\n}\n"],"sourceRoot":""}